// configs/build/vite.config.ts
import dotenv from "file:///home/admin/projects/AI-POC/frontend/node_modules/.pnpm/dotenv@16.4.5/node_modules/dotenv/lib/main.js";
import { defineConfig } from "file:///home/admin/projects/AI-POC/frontend/node_modules/.pnpm/vite@4.4.9_@types+node@20.12.12_terser@5.31.0/node_modules/vite/dist/node/index.js";

// configs/plugins/index.ts
import react from "file:///home/admin/projects/AI-POC/frontend/node_modules/.pnpm/@vitejs+plugin-react@4.0.4_vite@4.4.9/node_modules/@vitejs/plugin-react/dist/index.mjs";
import tsconfigPaths from "file:///home/admin/projects/AI-POC/frontend/node_modules/.pnpm/vite-tsconfig-paths@4.2.1_typescript@5.2.2_vite@4.4.9/node_modules/vite-tsconfig-paths/dist/index.mjs";
var plugins = [
  tsconfigPaths(),
  react({
    babel: {
      plugins: [
        [
          "babel-plugin-styled-components",
          {
            displayName: false,
            fileName: false,
            minify: true,
            pure: true,
            ssr: false,
            transpileTemplateLiterals: true
          }
        ]
      ]
    }
  })
];

// configs/shared/helpers.ts
import path from "path";
var __vite_injected_original_dirname = "/home/admin/projects/AI-POC/frontend/configs/shared";
var resolvePath = (...paths) => path.resolve(__vite_injected_original_dirname, "..", "..", ...paths);

// configs/build/base.ts
var baseBuildConfig = {
  outDir: "dist",
  sourcemap: false,
  assetsDir: "assets",
  cssCodeSplit: true,
  emptyOutDir: true,
  target: "esnext",
  reportCompressedSize: true
};

// configs/build/dev.ts
var devBuildConfig = {
  sourcemap: true
};

// configs/build/prod.ts
var prodBuildConfig = {
  sourcemap: false,
  manifest: true,
  minify: "terser",
  terserOptions: {
    compress: {
      keep_infinity: true,
      drop_console: true,
      drop_debugger: true
    }
  },
  cssMinify: "esbuild",
  chunkSizeWarningLimit: 1024
};

// configs/build/vite.config.ts
var vite_config_default = defineConfig(({ mode }) => {
  if (mode !== "local")
    dotenv.config({ path: ".env" });
  const IS_DEV = mode === "develop" || mode === "local";
  const port = Number(process.env.PORT) || 3030;
  Object.assign(baseBuildConfig, IS_DEV ? devBuildConfig : prodBuildConfig);
  return {
    plugins,
    base: "/",
    publicDir: resolvePath("public"),
    build: baseBuildConfig,
    preview: {
      port
    },
    server: {
      port
    },
    define: {
      IS_DEV
    }
  };
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiY29uZmlncy9idWlsZC92aXRlLmNvbmZpZy50cyIsICJjb25maWdzL3BsdWdpbnMvaW5kZXgudHMiLCAiY29uZmlncy9zaGFyZWQvaGVscGVycy50cyIsICJjb25maWdzL2J1aWxkL2Jhc2UudHMiLCAiY29uZmlncy9idWlsZC9kZXYudHMiLCAiY29uZmlncy9idWlsZC9wcm9kLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL2hvbWUvYWRtaW4vcHJvamVjdHMvQUktUE9DL2Zyb250ZW5kL2NvbmZpZ3MvYnVpbGRcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9ob21lL2FkbWluL3Byb2plY3RzL0FJLVBPQy9mcm9udGVuZC9jb25maWdzL2J1aWxkL3ZpdGUuY29uZmlnLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9ob21lL2FkbWluL3Byb2plY3RzL0FJLVBPQy9mcm9udGVuZC9jb25maWdzL2J1aWxkL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xuaW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndml0ZSc7XG5pbXBvcnQgeyBwbHVnaW5zIH0gZnJvbSAnLi4vcGx1Z2lucyc7XG5pbXBvcnQgeyByZXNvbHZlUGF0aCB9IGZyb20gJy4uL3NoYXJlZC9oZWxwZXJzJztcbmltcG9ydCB7IGJhc2VCdWlsZENvbmZpZyBhcyBidWlsZCB9IGZyb20gJy4vYmFzZSc7XG5pbXBvcnQgeyBkZXZCdWlsZENvbmZpZyB9IGZyb20gJy4vZGV2JztcbmltcG9ydCB7IHByb2RCdWlsZENvbmZpZyB9IGZyb20gJy4vcHJvZCc7XG5cbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZygoeyBtb2RlIH0pID0+IHtcbiAgaWYgKG1vZGUgIT09ICdsb2NhbCcpIGRvdGVudi5jb25maWcoeyBwYXRoOiAnLmVudicgfSk7XG5cbiAgY29uc3QgSVNfREVWID0gbW9kZSA9PT0gJ2RldmVsb3AnIHx8IG1vZGUgPT09ICdsb2NhbCc7XG4gIGNvbnN0IHBvcnQgPSBOdW1iZXIocHJvY2Vzcy5lbnYuUE9SVCkgfHwgMzAzMDtcblxuICBPYmplY3QuYXNzaWduKGJ1aWxkLCBJU19ERVYgPyBkZXZCdWlsZENvbmZpZyA6IHByb2RCdWlsZENvbmZpZyk7XG5cbiAgcmV0dXJuIHtcbiAgICBwbHVnaW5zLFxuICAgIGJhc2U6ICcvJyxcbiAgICBwdWJsaWNEaXI6IHJlc29sdmVQYXRoKCdwdWJsaWMnKSxcbiAgICBidWlsZCxcbiAgICBwcmV2aWV3OiB7XG4gICAgICBwb3J0LFxuICAgIH0sXG4gICAgc2VydmVyOiB7XG4gICAgICBwb3J0LFxuICAgIH0sXG4gICAgZGVmaW5lOiB7XG4gICAgICBJU19ERVYsXG4gICAgfSxcbiAgfTtcbn0pO1xuIiwgImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvaG9tZS9hZG1pbi9wcm9qZWN0cy9BSS1QT0MvZnJvbnRlbmQvY29uZmlncy9wbHVnaW5zXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCIvaG9tZS9hZG1pbi9wcm9qZWN0cy9BSS1QT0MvZnJvbnRlbmQvY29uZmlncy9wbHVnaW5zL2luZGV4LnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9ob21lL2FkbWluL3Byb2plY3RzL0FJLVBPQy9mcm9udGVuZC9jb25maWdzL3BsdWdpbnMvaW5kZXgudHNcIjtpbXBvcnQgcmVhY3QgZnJvbSAnQHZpdGVqcy9wbHVnaW4tcmVhY3QnO1xuaW1wb3J0IHsgUGx1Z2luT3B0aW9uIH0gZnJvbSAndml0ZSc7XG5pbXBvcnQgdHNjb25maWdQYXRocyBmcm9tICd2aXRlLXRzY29uZmlnLXBhdGhzJztcblxuY29uc3QgcGx1Z2luczogUGx1Z2luT3B0aW9uW10gPSBbXG4gIHRzY29uZmlnUGF0aHMoKSxcbiAgcmVhY3Qoe1xuICAgIGJhYmVsOiB7XG4gICAgICBwbHVnaW5zOiBbXG4gICAgICAgIFtcbiAgICAgICAgICAnYmFiZWwtcGx1Z2luLXN0eWxlZC1jb21wb25lbnRzJyxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBkaXNwbGF5TmFtZTogZmFsc2UsXG4gICAgICAgICAgICBmaWxlTmFtZTogZmFsc2UsXG4gICAgICAgICAgICBtaW5pZnk6IHRydWUsXG4gICAgICAgICAgICBwdXJlOiB0cnVlLFxuICAgICAgICAgICAgc3NyOiBmYWxzZSxcbiAgICAgICAgICAgIHRyYW5zcGlsZVRlbXBsYXRlTGl0ZXJhbHM6IHRydWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgIF0sXG4gICAgfSxcbiAgfSksXG5dO1xuXG5leHBvcnQgeyBwbHVnaW5zIH07XG4iLCAiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9ob21lL2FkbWluL3Byb2plY3RzL0FJLVBPQy9mcm9udGVuZC9jb25maWdzL3NoYXJlZFwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL2hvbWUvYWRtaW4vcHJvamVjdHMvQUktUE9DL2Zyb250ZW5kL2NvbmZpZ3Mvc2hhcmVkL2hlbHBlcnMudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL2hvbWUvYWRtaW4vcHJvamVjdHMvQUktUE9DL2Zyb250ZW5kL2NvbmZpZ3Mvc2hhcmVkL2hlbHBlcnMudHNcIjtpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuY29uc3QgcmVzb2x2ZVBhdGggPSAoLi4ucGF0aHM6IHN0cmluZ1tdKSA9PiBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAnLi4nLCAuLi5wYXRocyk7XG5cbmV4cG9ydCB7IHJlc29sdmVQYXRoIH07XG4iLCAiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9ob21lL2FkbWluL3Byb2plY3RzL0FJLVBPQy9mcm9udGVuZC9jb25maWdzL2J1aWxkXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCIvaG9tZS9hZG1pbi9wcm9qZWN0cy9BSS1QT0MvZnJvbnRlbmQvY29uZmlncy9idWlsZC9iYXNlLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9ob21lL2FkbWluL3Byb2plY3RzL0FJLVBPQy9mcm9udGVuZC9jb25maWdzL2J1aWxkL2Jhc2UudHNcIjtpbXBvcnQgeyBCdWlsZE9wdGlvbnMgfSBmcm9tICd2aXRlJztcblxuY29uc3QgYmFzZUJ1aWxkQ29uZmlnOiBCdWlsZE9wdGlvbnMgPSB7XG4gIG91dERpcjogJ2Rpc3QnLFxuICBzb3VyY2VtYXA6IGZhbHNlLFxuICBhc3NldHNEaXI6ICdhc3NldHMnLFxuICBjc3NDb2RlU3BsaXQ6IHRydWUsXG4gIGVtcHR5T3V0RGlyOiB0cnVlLFxuICB0YXJnZXQ6ICdlc25leHQnLFxuICByZXBvcnRDb21wcmVzc2VkU2l6ZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCB7IGJhc2VCdWlsZENvbmZpZyB9O1xuIiwgImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvaG9tZS9hZG1pbi9wcm9qZWN0cy9BSS1QT0MvZnJvbnRlbmQvY29uZmlncy9idWlsZFwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL2hvbWUvYWRtaW4vcHJvamVjdHMvQUktUE9DL2Zyb250ZW5kL2NvbmZpZ3MvYnVpbGQvZGV2LnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9ob21lL2FkbWluL3Byb2plY3RzL0FJLVBPQy9mcm9udGVuZC9jb25maWdzL2J1aWxkL2Rldi50c1wiO2ltcG9ydCB7IEJ1aWxkT3B0aW9ucyB9IGZyb20gJ3ZpdGUnO1xuXG5jb25zdCBkZXZCdWlsZENvbmZpZzogQnVpbGRPcHRpb25zID0ge1xuICBzb3VyY2VtYXA6IHRydWUsXG59O1xuXG5leHBvcnQgeyBkZXZCdWlsZENvbmZpZyB9O1xuIiwgImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvaG9tZS9hZG1pbi9wcm9qZWN0cy9BSS1QT0MvZnJvbnRlbmQvY29uZmlncy9idWlsZFwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL2hvbWUvYWRtaW4vcHJvamVjdHMvQUktUE9DL2Zyb250ZW5kL2NvbmZpZ3MvYnVpbGQvcHJvZC50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vaG9tZS9hZG1pbi9wcm9qZWN0cy9BSS1QT0MvZnJvbnRlbmQvY29uZmlncy9idWlsZC9wcm9kLnRzXCI7aW1wb3J0IHsgQnVpbGRPcHRpb25zIH0gZnJvbSAndml0ZSc7XG5cbmNvbnN0IHByb2RCdWlsZENvbmZpZzogQnVpbGRPcHRpb25zID0ge1xuICBzb3VyY2VtYXA6IGZhbHNlLFxuICBtYW5pZmVzdDogdHJ1ZSxcbiAgbWluaWZ5OiAndGVyc2VyJyxcbiAgdGVyc2VyT3B0aW9uczoge1xuICAgIGNvbXByZXNzOiB7XG4gICAgICBrZWVwX2luZmluaXR5OiB0cnVlLFxuICAgICAgZHJvcF9jb25zb2xlOiB0cnVlLFxuICAgICAgZHJvcF9kZWJ1Z2dlcjogdHJ1ZSxcbiAgICB9LFxuICB9LFxuICBjc3NNaW5pZnk6ICdlc2J1aWxkJyxcbiAgY2h1bmtTaXplV2FybmluZ0xpbWl0OiAxMDI0LFxufTtcblxuZXhwb3J0IHsgcHJvZEJ1aWxkQ29uZmlnIH07XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQXdVLE9BQU8sWUFBWTtBQUMzVixTQUFTLG9CQUFvQjs7O0FDRHFTLE9BQU8sV0FBVztBQUVwVixPQUFPLG1CQUFtQjtBQUUxQixJQUFNLFVBQTBCO0FBQUEsRUFDOUIsY0FBYztBQUFBLEVBQ2QsTUFBTTtBQUFBLElBQ0osT0FBTztBQUFBLE1BQ0wsU0FBUztBQUFBLFFBQ1A7QUFBQSxVQUNFO0FBQUEsVUFDQTtBQUFBLFlBQ0UsYUFBYTtBQUFBLFlBQ2IsVUFBVTtBQUFBLFlBQ1YsUUFBUTtBQUFBLFlBQ1IsTUFBTTtBQUFBLFlBQ04sS0FBSztBQUFBLFlBQ0wsMkJBQTJCO0FBQUEsVUFDN0I7QUFBQSxRQUNGO0FBQUEsTUFDRjtBQUFBLElBQ0Y7QUFBQSxFQUNGLENBQUM7QUFDSDs7O0FDdkJtVSxPQUFPLFVBQVU7QUFBcFYsSUFBTSxtQ0FBbUM7QUFFekMsSUFBTSxjQUFjLElBQUksVUFBb0IsS0FBSyxRQUFRLGtDQUFXLE1BQU0sTUFBTSxHQUFHLEtBQUs7OztBQ0F4RixJQUFNLGtCQUFnQztBQUFBLEVBQ3BDLFFBQVE7QUFBQSxFQUNSLFdBQVc7QUFBQSxFQUNYLFdBQVc7QUFBQSxFQUNYLGNBQWM7QUFBQSxFQUNkLGFBQWE7QUFBQSxFQUNiLFFBQVE7QUFBQSxFQUNSLHNCQUFzQjtBQUN4Qjs7O0FDUkEsSUFBTSxpQkFBK0I7QUFBQSxFQUNuQyxXQUFXO0FBQ2I7OztBQ0ZBLElBQU0sa0JBQWdDO0FBQUEsRUFDcEMsV0FBVztBQUFBLEVBQ1gsVUFBVTtBQUFBLEVBQ1YsUUFBUTtBQUFBLEVBQ1IsZUFBZTtBQUFBLElBQ2IsVUFBVTtBQUFBLE1BQ1IsZUFBZTtBQUFBLE1BQ2YsY0FBYztBQUFBLE1BQ2QsZUFBZTtBQUFBLElBQ2pCO0FBQUEsRUFDRjtBQUFBLEVBQ0EsV0FBVztBQUFBLEVBQ1gsdUJBQXVCO0FBQ3pCOzs7QUxQQSxJQUFPLHNCQUFRLGFBQWEsQ0FBQyxFQUFFLEtBQUssTUFBTTtBQUN4QyxNQUFJLFNBQVM7QUFBUyxXQUFPLE9BQU8sRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUVwRCxRQUFNLFNBQVMsU0FBUyxhQUFhLFNBQVM7QUFDOUMsUUFBTSxPQUFPLE9BQU8sUUFBUSxJQUFJLElBQUksS0FBSztBQUV6QyxTQUFPLE9BQU8saUJBQU8sU0FBUyxpQkFBaUIsZUFBZTtBQUU5RCxTQUFPO0FBQUEsSUFDTDtBQUFBLElBQ0EsTUFBTTtBQUFBLElBQ04sV0FBVyxZQUFZLFFBQVE7QUFBQSxJQUMvQjtBQUFBLElBQ0EsU0FBUztBQUFBLE1BQ1A7QUFBQSxJQUNGO0FBQUEsSUFDQSxRQUFRO0FBQUEsTUFDTjtBQUFBLElBQ0Y7QUFBQSxJQUNBLFFBQVE7QUFBQSxNQUNOO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
